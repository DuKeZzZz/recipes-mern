{"ast":null,"code":"var _jsxFileName = \"C:\\\\_projects\\\\recipies\\\\client\\\\src\\\\components\\\\TagsInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TagsInput(props) {\n  _s();\n\n  const [isKeyReleased, setIsKeyReleased] = useState(false);\n  const [input, setInput] = useState(''); // const [tags, setTags] = useState([]);\n\n  const tags = props.inputs.recipeTags;\n\n  const onChange = e => {\n    const {\n      value\n    } = e.target;\n    setInput(value);\n  };\n\n  const onKeyDown = e => {\n    console.log(tags);\n    const {\n      key\n    } = e;\n    const trimmedInput = input.trim();\n\n    if (key === ',' && trimmedInput.length && !tags.includes(trimmedInput)) {\n      e.preventDefault();\n      props.setInputs(values => ({ ...values,\n        recipeTags: [...values.recipeTags, trimmedInput]\n      })); //   setTags(prevState => [...prevState, trimmedInput]);\n\n      setInput('');\n    }\n\n    if (key === \"Backspace\" && !input.length && tags.length && isKeyReleased) {\n      const tagsCopy = [...tags];\n      const poppedTag = tagsCopy.pop();\n      e.preventDefault();\n      props.setInputs(values => ({ ...values,\n        recipeTags: tagsCopy\n      })); //   setTags(tagsCopy);\n\n      setInput(poppedTag);\n    }\n\n    setIsKeyReleased(false);\n  };\n\n  const onKeyUp = () => {\n    setIsKeyReleased(true);\n  };\n\n  const deleteTag = index => {\n    props.setInputs(values => {\n      return { ...values,\n        recipeTags: values.recipeTags.filter((tag, i) => i !== index)\n      };\n    }); // setTags(prevState => prevState.filter((tag, i) => i !== index))\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tag-container\",\n      children: [tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tag\",\n        children: [tag, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTag(index),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"tag\",\n        value: input,\n        placeholder: \"Enter a tag\",\n        onKeyDown: onKeyDown,\n        onKeyUp: onKeyUp,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TagsInput, \"kBQ6/sQgrtPF4VcDig9hzTBZN54=\");\n\n_c = TagsInput;\nexport default TagsInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TagsInput\");","map":{"version":3,"names":["React","useState","TagsInput","props","isKeyReleased","setIsKeyReleased","input","setInput","tags","inputs","recipeTags","onChange","e","value","target","onKeyDown","console","log","key","trimmedInput","trim","length","includes","preventDefault","setInputs","values","tagsCopy","poppedTag","pop","onKeyUp","deleteTag","index","filter","tag","i","map"],"sources":["C:/_projects/recipies/client/src/components/TagsInput.jsx"],"sourcesContent":["import React, {useState} from 'react';\r\n\r\nfunction TagsInput(props) {\r\n    const [isKeyReleased, setIsKeyReleased] = useState(false);\r\n\r\n    const [input, setInput] = useState('');\r\n\r\n    // const [tags, setTags] = useState([]);\r\n\r\n    const tags = props.inputs.recipeTags;\r\n\r\n    const onChange = (e) => {\r\n        const { value } = e.target;\r\n        setInput(value);\r\n    };\r\n\r\n    const onKeyDown = (e) => {\r\n        console.log(tags);\r\n        const { key } = e;\r\n        const trimmedInput = input.trim();\r\n      \r\n        if (key === ',' && trimmedInput.length && !tags.includes(trimmedInput)) {\r\n          e.preventDefault();\r\n          props.setInputs(values => ({...values, recipeTags: [...values.recipeTags, trimmedInput]}));\r\n        //   setTags(prevState => [...prevState, trimmedInput]);\r\n          setInput('');\r\n        }\r\n      \r\n        if (key === \"Backspace\" && !input.length && tags.length && isKeyReleased) {\r\n          const tagsCopy = [...tags];\r\n          const poppedTag = tagsCopy.pop();\r\n          e.preventDefault();\r\n          props.setInputs(values => ({...values, recipeTags: tagsCopy}));\r\n        //   setTags(tagsCopy);\r\n          setInput(poppedTag);\r\n        }\r\n      \r\n        setIsKeyReleased(false);\r\n    };\r\n      \r\n    const onKeyUp = () => {\r\n        setIsKeyReleased(true);\r\n    }\r\n\r\n    const deleteTag = (index) => {\r\n        props.setInputs(values => {\r\n            return ({...values, recipeTags: values.recipeTags.filter((tag, i) => i !== index)});\r\n        });\r\n        // setTags(prevState => prevState.filter((tag, i) => i !== index))\r\n    }\r\n\r\n    return (\r\n        <div className=\"mb-3\">\r\n            <div className=\"tag-container\">\r\n                {tags.map((tag, index) => (\r\n                <div key={index} className=\"tag\">\r\n                    {tag}\r\n                    <button onClick={() => deleteTag(index)}>x</button>\r\n                </div>\r\n                ))}\r\n                <input\r\n                    name=\"tag\"\r\n                    value={input}\r\n                    placeholder=\"Enter a tag\"\r\n                    onKeyDown={onKeyDown} \r\n                    onKeyUp={onKeyUp} \r\n                    onChange={onChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TagsInput;"],"mappings":"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"},"metadata":{},"sourceType":"module"}