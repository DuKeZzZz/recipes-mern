{"ast":null,"code":"var _jsxFileName = \"C:\\\\_projects\\\\recipies\\\\client\\\\src\\\\components\\\\IngredientsInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction IngredientsInput(props) {\n  _s();\n\n  const [ingredient, setIngredient] = useState({\n    ingredientId: 1,\n    ingredientName: \"\",\n    ingredientAmount: undefined,\n    ingredientUnit: \"\"\n  });\n  const ingredients = props.inputs.recipieIngredients;\n\n  function addIngredientToList(currentIngredient) {\n    props.setInputs(values => ({ ...values,\n      recipieIngredients: [...values.recipieIngredients, currentIngredient]\n    }));\n  }\n\n  function deleteIngredientFromList(index) {\n    setIngredient(prevValue => ({ ...prevValue,\n      ingredientId: prevValue.ingredientId - 1\n    }));\n    props.setInputs(values => {\n      return { ...values,\n        recipieIngredients: values.recipieIngredients.filter((tag, i) => i !== index)\n      };\n    });\n  }\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setIngredient(prevValue => {\n      return { ...prevValue,\n        [name]: value\n      };\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 row\",\n      children: ingredients.map((currentIngredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tag\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [currentIngredient.ingredientName, \" : \", currentIngredient.ingredientAmount, \" \", currentIngredient.ingredientUnit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteIngredientFromList(index),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          onChange: handleChange,\n          name: \"ingredientName\",\n          placeholder: \"Ingredient name\",\n          value: ingredient.ingredientName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 col-md-3\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"number\",\n          onChange: handleChange,\n          name: \"ingredientAmount\",\n          placeholder: \"Ingredient amount\",\n          value: ingredient.ingredientAmount || ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          name: \"ingredientUnit\",\n          onChange: handleChange,\n          value: ingredient.ingredientUnit,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"--choose unit--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"L\",\n            children: \"L\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"mL\",\n            children: \"mL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"g\",\n            children: \"g\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"mg\",\n            children: \"mg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"tbsp\",\n            children: \"tbsp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 col-md-1\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-dark\",\n          onClick: event => {\n            event.preventDefault();\n\n            if (ingredients.find(_ref => {\n              let {\n                ingredientName\n              } = _ref;\n              return ingredientName === ingredient.ingredientName;\n            })) {\n              alert(\"Two ingredients cannot share the same name!\");\n            } else {\n              addIngredientToList(ingredient);\n              setIngredient(prevValue => ({\n                ingredientId: prevValue.ingredientId + 1,\n                ingredientName: \"\",\n                ingredientAmount: undefined,\n                ingredientUnit: \"\"\n              }));\n            }\n          },\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(IngredientsInput, \"PvnBm2PD5C1lJvCmQXZXaKeEltg=\");\n\n_c = IngredientsInput;\nexport default IngredientsInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"IngredientsInput\");","map":{"version":3,"names":["React","useState","IngredientsInput","props","ingredient","setIngredient","ingredientId","ingredientName","ingredientAmount","undefined","ingredientUnit","ingredients","inputs","recipieIngredients","addIngredientToList","currentIngredient","setInputs","values","deleteIngredientFromList","index","prevValue","filter","tag","i","handleChange","event","name","value","target","map","preventDefault","find","alert"],"sources":["C:/_projects/recipies/client/src/components/IngredientsInput.jsx"],"sourcesContent":["import React, {useState} from 'react';\r\n\r\nfunction IngredientsInput(props) {\r\n    const [ingredient, setIngredient] = useState({\r\n        ingredientId: 1,\r\n        ingredientName: \"\",\r\n        ingredientAmount: undefined,\r\n        ingredientUnit: \"\"\r\n    });\r\n\r\n    const ingredients = props.inputs.recipieIngredients;\r\n\r\n    function addIngredientToList(currentIngredient) {\r\n        props.setInputs(values => ({...values, recipieIngredients: [...values.recipieIngredients, currentIngredient]}));\r\n    }\r\n    \r\n    function deleteIngredientFromList(index) {\r\n        setIngredient(prevValue => ({...prevValue, ingredientId: prevValue.ingredientId - 1}));\r\n\r\n        props.setInputs(values => {\r\n            return ({...values, recipieIngredients: values.recipieIngredients.filter((tag, i) => i !== index)});\r\n        });\r\n    }\r\n\r\n    function handleChange(event) {\r\n        const { name, value } = event.target;\r\n    \r\n        setIngredient((prevValue) => {\r\n          return { ...prevValue, [name]: value };\r\n        });\r\n    }\r\n\r\n    return(\r\n        \r\n        <div className=\"mb-3\">\r\n            <h4>Ingredients</h4>\r\n            <hr></hr>\r\n            <div className='mb-3 row'>\r\n                {ingredients.map((currentIngredient, index) => (\r\n                    <div key={index} className='tag'>\r\n                        <h3>{currentIngredient.ingredientName} : {currentIngredient.ingredientAmount} {currentIngredient.ingredientUnit}</h3>\r\n                        <button  onClick={() => deleteIngredientFromList(index)}>x</button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className='mb-3 row'>\r\n                <div className =\"mb-3 col-md-6\">\r\n                <input\r\n                    className ='form-control'\r\n                    type=\"text\"\r\n                    onChange={handleChange}\r\n                    name=\"ingredientName\"\r\n                    placeholder=\"Ingredient name\"\r\n                    value={ingredient.ingredientName}\r\n                />\r\n                </div>\r\n                <div className =\"mb-3 col-md-3\">\r\n                <input\r\n                    className ='form-control'\r\n                    type=\"number\"\r\n                    onChange={handleChange}\r\n                    name=\"ingredientAmount\"\r\n                    placeholder=\"Ingredient amount\"\r\n                    value={ingredient.ingredientAmount || ''}\r\n                />\r\n                </div>\r\n                <div className =\"mb-3 col-md-2\">\r\n                    <select className=\"form-control\" name='ingredientUnit' onChange={handleChange} value={ingredient.ingredientUnit}>\r\n                        <option value=\"\">--choose unit--</option>\r\n                        <option value=\"L\">L</option>\r\n                        <option value=\"mL\">mL</option>\r\n                        <option value=\"g\">g</option>\r\n                        <option value=\"mg\">mg</option>\r\n                        <option value=\"tbsp\">tbsp</option>\r\n                    </select>\r\n                </div>\r\n                <div className='mb-3 col-md-1'>\r\n                <button\r\n                    className=\"btn btn-outline-dark\"\r\n                    onClick={(event) => {\r\n                        event.preventDefault();\r\n                        if (ingredients.find(({ingredientName}) => (ingredientName===ingredient.ingredientName))) {\r\n                            alert(\"Two ingredients cannot share the same name!\")\r\n                        } else {\r\n                            \r\n                            addIngredientToList(ingredient);\r\n                            setIngredient((prevValue) => ({\r\n                                ingredientId: prevValue.ingredientId + 1,\r\n                                ingredientName: \"\",\r\n                                ingredientAmount: undefined,\r\n                                ingredientUnit: \"\"\r\n                            })); \r\n                        }\r\n                    }}\r\n                    >\r\n                    Add\r\n                </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IngredientsInput;"],"mappings":"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"},"metadata":{},"sourceType":"module"}